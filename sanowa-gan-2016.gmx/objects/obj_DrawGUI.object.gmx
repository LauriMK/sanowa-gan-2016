<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init

//Functions
//

//Instance variables

//Built-in variables
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///piirretään pysyvät UI osat 

    ///healthbarin osat
draw_healthbar(11, 10, 180, 30, obj_Player.playerHitPoints, c_gray, c_red, c_red, 0, false, false)
draw_sprite(spr_Health,0,5,5);

    //powerupin nuoli &amp; seuraavan laatikko
draw_sprite(spr_PowerUpArrow,0,256,5);
draw_sprite(spr_NextBgr, 0, 270, 4);

    //tekstit, healtti ja ammusten määrä
draw_text(0+330,0+10,obj_Player.magazine);
draw_text(80, 12, obj_Player.playerHitPoints);


///Mikä poweruppi on otettu taskuun

if(obj_Player.powerUpSlot == POWERUP_SLOT_SPREAD){

    draw_sprite(spr_PwrSpread, 0, 270, 0+4); 
}
else if(obj_Player.powerUpSlot == POWERUP_SLOT_SHOTGUN){

    draw_sprite(spr_PwrShotgun2, 0, 270, 0+4); 
}
else if(obj_Player.powerUpSlot == POWERUP_SLOT_GRENADE){

    draw_sprite(spr_PwrGrenade, 0, 270, 0+4); 
}

///Mikä poweruppi on käytössä

if(obj_Player.currentWeapon == WEAPON_SHOTGUN){
    
    draw_sprite(spr_PwrShotgun2, 0, 200, 0+4);
           
}
else if(obj_Player.currentWeapon == WEAPON_GRENADE){

    draw_sprite(spr_PwrGrenade, 0, 200, 0+4);
        
}
else if(obj_Player.currentWeapon == WEAPON_SPREAD){

    draw_sprite(spr_PwrSpread, 0, 200, 0+4);
         
}


// Piirretään lipas spriteinä

for ( i = 0; i &lt; obj_Player.magazine; i++){
    
    slot = i * sprite_get_width(spr_Clip);
    draw_sprite(spr_Clip, 0, 330 + slot , 30);
}


//Piirretään  käytössä olevan powerupin laatikko
//tää pitää olla viimesenä että toimii oikein eli piirtyy powerupin päälle
draw_sprite(spr_CurrentBgr, 0, 196, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
